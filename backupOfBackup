// class PongGame {
//     gameOver: boolean;
//     user1Won: boolean;
//     user2Won: boolean;
//     framePerSec: number;
//     isPaused: boolean;
// 	renderingStopped: boolean;
// 	socket: Socket

//     constructor(socket : Socket) {
//         this.gameOver = false;
//         this.user1Won = false;
//         this.user2Won = false;
//         this.framePerSec = 50;
//         this.isPaused = false;
// 		this.renderingStopped = false;
// 		this.socket = socket;
//     }

//     pauseGame(duration: number): void {
//         this.isPaused = true;
//         setTimeout(() => {
//             this.isPaused = false;
//         }, duration);
//     }

//     collision(ball: Ball, player: Rect): boolean {
//         const playerTop: number = player.y;
//         const playerBottom: number = player.y + player.h;
//         const playerLeft: number = player.x;
//         const playerRight: number = player.x + player.w;

//         const ballTop: number = ball.y - ball.r;
//         const ballBottom: number = ball.y + ball.r;
//         const ballLeft: number = ball.x - ball.r;
//         const ballRight: number = ball.x + ball.r;

//         return (
//             ballRight > playerLeft &&
//             ballTop < playerBottom &&
//             ballLeft < playerRight &&
//             ballBottom > playerTop
//         );
//     }

//     resetBall(): void {
//         ball.x = canvasWidth / 2;
//         ball.y = canvasHeight / 2;
//         ball.velocityX *= -1;
//     }

//     movePaddle(event: MouseEvent): void {
//         let pos: DOMRect = canvas.getBoundingClientRect();
//         player_1.y = event.clientY - pos.top - player_1.h / 2;
//         player_2.y = event.clientY - pos.top - player_2.h / 2;
//     }

//     updateScore(): void {
//         if (ball.x - ball.r < 0) {
//             player_2.score++;
//             this.resetBall();
//             this.pauseGame(150);
//         } else if (ball.x + ball.r > canvasWidth) {
//             player_1.score++;
//             this.resetBall();
//             this.pauseGame(150);
//         }
//     }

//     checkGameStatus(): void {
//         if (player_1.score === 5) {
//             this.user1Won = true;
//             this.gameOver = true;
//         } else if (player_2.score === 5) {
//             this.user2Won = true;
//             this.gameOver = true;
//         }
//     }

//     update(): void {
//         ball.x += ball.velocityX;
//         ball.y += ball.velocityY;

//         if (ball.y + ball.r > canvasHeight || ball.y + ball.r < 10) {
//             ball.velocityY *= -1;
//         }

//         let player: Rect = ball.x < canvasWidth / 2 ? player_1 : player_2;

//         if (this.collision(ball, player)) {
//             // where the ball hits the player
//             let collidePoint: number = ball.y - (player.y + player.h / 2);

//             // normalization
//             collidePoint = collidePoint / (player.h / 2);

//             // calculate the angle in Radian
// 			let angleRad: number = (Math.PI / 4) * collidePoint;
// 			if (player == player_1) {
// 				angleRad *= 1;
// 			} else if (player == player_2) {
// 				angleRad *= -1;
// 			}

//             let direction: number = ball.x < canvasWidth / 2 ? 1 : -1;

//             ball.velocityX = direction * ball.speed * Math.cos(angleRad);
//             ball.velocityY = direction * ball.speed * Math.sin(angleRad);

//             ball.speed += 0.2;
//         }

//         this.updateScore();
//         this.checkGameStatus();
//     }

//     render(): void {
//         if (this.gameOver) {
//             drawRect(0, 0, canvasWidth, canvasHeight, "#B2C6E4");
//             drawLine(
//                 canvasWidth / 2,
//                 0,
//                 canvasWidth / 2,
//                 canvasHeight / 2 - 40,
//                 midLine.color
//             );
//             drawLine(
//                 canvasWidth / 2,
//                 canvasHeight / 2 + 40,
//                 canvasWidth / 2,
//                 canvasHeight,
//                 midLine.color
//             );

//             if (this.user1Won) {
//                 drawText("Game Over, You Win!", "#003366");
//             } else if (this.user2Won) {
//                 drawText("Game Over, You Lose!", "#003366");
//             }
// 			this.renderingStopped = true;
//         } else {
//             drawRect(0, 0, canvasWidth, canvasHeight, "#B2C6E4");
//             drawRect(player_1.x, player_1.y, player_1.w, player_1.h, player_1.color);
//             drawRect(player_2.x, player_2.y, player_2.w, player_2.h, player_2.color);
//             drawLine(
//                 midLine.startX,
//                 midLine.startY,
//                 midLine.endX,
//                 midLine.endY,
//                 midLine.color
//             );
//             drawBall(ball.x, ball.y, ball.r, ball.color);
//             drawScore(player_1.score.toString(), -50, 70, "#201E3A");
//             drawScore(player_2.score.toString(), 50, 70, "#201E3A");
//         }
//     }

//     game(): void {
//         if (!this.isPaused) {
//             this.update();
//         }
//         this.render();
//     }

//     startGame(): void {
//         canvas.addEventListener("mousemove", (event: MouseEvent) => {
// 			let pos: DOMRect = canvas.getBoundingClientRect();
// 			// player_1.y = event.clientY - pos.top - player_1.h / 2;
// 			// player_2.y = event.clientY - pos.top - player_2.h / 2;
// 		});

// 		if (!this.renderingStopped)
// 			setInterval(() => this.game(), 1000 / this.framePerSec);
//     }
// }

// export default PongGame;
